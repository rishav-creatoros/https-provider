"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpsProvider = void 0;
class HttpsProvider {
    constructor(params) {
        // params for the provider
        this._params = {
            provider: 'http',
            payload: {
                metadata: {
                    name: '',
                    logoUrl: ''
                },
                method: 'GET',
                url: '',
                login: {
                    url: '',
                    checkLoginCookies: ['']
                },
                responseSelections: [{
                        responseMatch: ''
                    }],
                parameters: {},
            }
        };
        // check if params are of type HttpsProviderParams
        if (!params.name || !params.logoUrl || !params.url || !params.loginUrl || !params.loginCookies || !params.selectionRegex) {
            throw new Error('Invalid parameters passed to HttpsProvider');
        }
        // set params
        this._params.payload = {
            metadata: {
                name: params.name,
                logoUrl: params.logoUrl
            },
            url: params.url,
            login: {
                url: params.loginUrl,
                checkLoginCookies: params.loginCookies
            },
            responseSelections: [
                { responseMatch: params.selectionRegex }
            ],
            parameters: {},
        };
        // set regex
        this._regex = params.selectionRegex;
    }
    // getters
    get params() {
        return this._params;
    }
    get regex() {
        return this._regex;
    }
}
exports.HttpsProvider = HttpsProvider;
